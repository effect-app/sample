{
    "ModelCodegen": {
        "prefix": "genmod",
        "body": [
            "// codegen:start {preset: model}"
        ]
    },
    "ResourceCodegen": {
        "prefix": "genrsc",
        "body": [
            "// codegen:start {preset: meta, sourcePrefix: src/}"
        ]
    },
    "ModelComplete": {
        "prefix": "moc",
        "body": [
            "export class $1 extends S.ExtendedClass<$1, $1.Encoded>()({",
            "$2",
            "}) {}"
        ],
        "description": "Defines a Model signature"
    },
    "Model": {
        "prefix": "mo",
        "body": [
            "export class $1 extends S.Class<$1>()({$2}) {}",
            ""
        ],
        "description": "Defines a Model signature"
    },
    "UnionOpaque": {
        "prefix": "un",
        "body": [
            "const $1__ = union({ $2 })",
            "const $1_ = enhanceClassUnion(OpaqueSchema<$1, $1.Encoded>()($1__))",
            "export type $1 = To<typeof $1__> & UnionBrand",
            "export interface $1Schema extends Identity<typeof $1_> {}",
            "export const $1: $1Schema = $1_",
            "export namespace $1 {",
            "  export type Encoded = Encoded<typeof $1__> & UnionBrand",
            "}"
        ]
    },
    "Request": {
        "prefix": "req",
        "body": [
            "export class $1 extends S.Req<$1>()(\"$1\", {",
            "  $2",
            "}, { success: $3 }) {}",
            ""
        ],
        "description": "Defines a Request signature"
    },
    "Response": {
        "prefix": "res",
        "body": [
            "export class Response extends S.Class<Response()({$1}) {}",
            ""
        ],
        "description": "Defines a Response signature"
    },
    "controller": {
        "prefix": "controller",
        "body": [
            "export default Router($1Rsc)([",
            "  $4",
            "], ({ $2 }) =>",
            "  Effect.gen(function*() {",
            "    //const userRepo = yield* UserRepo",
            "",
            "    return matchFor($1Rsc)({",
            "      $2: $3",
            "    })",
            "  })"
        ]
    }
}